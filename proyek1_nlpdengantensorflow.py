# -*- coding: utf-8 -*-
"""Proyek1_NLPdenganTensorFlow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1srUfAWdCzLkVVLhd_Fde5w4CGoPJwD2J

Arindita Prihastama | 1494037162100-370 | arinditap@gmail.com
"""

import pandas as pd
url = 'https://raw.githubusercontent.com/arinditap/dicoding-MachineLearning/main/cyberbullying_tweets.csv'
df = pd.read_csv(url)
df.head()

category = pd.get_dummies(df.cyberbullying_type)
df_baru = pd.concat([df, category], axis=1)
df_baru = df_baru.drop(columns='cyberbullying_type')
df_baru

tweet = df_baru['tweet_text'].values
jenis = df_baru[['age', 'ethnicity', 'gender', 'not_cyberbullying', 'other_cyberbullying', 'religion']]

from sklearn.model_selection import train_test_split
tweet_latih, tweet_uji, jenis_latih, jenis_uji = train_test_split(tweet, jenis, test_size=0.2)

from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences

tokenizer = Tokenizer(num_words=5000, oov_token='(?)')
tokenizer.fit_on_texts(tweet_latih)
tokenizer.fit_on_texts(tweet_uji)

sekuens_latih = tokenizer.texts_to_sequences(tweet_latih)
sekuens_uji = tokenizer.texts_to_sequences(tweet_uji)

padded_latih = pad_sequences(sekuens_latih)
padded_uji = pad_sequences(sekuens_uji)

import tensorflow as tf
model = tf.keras.Sequential([
    tf.keras.layers.Embedding(input_dim=60000, output_dim=64),
    tf.keras.layers.LSTM(64),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(32, activation='relu'),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(6, activation='softmax')
])
model.compile(loss='categorical_crossentropy', optimizer='Adam', metrics=['accuracy'])

class myCallback(tf.keras.callbacks.Callback):
  def on_epoch_end(self, epoch, logs=None):
    if(logs.get('accuracy') > 0.84 and logs.get('val_accuracy') > 0.84):
      print('Accuracy reached 83%, training stopped.')
      self.model.stop_training = True

callbacks=myCallback()

num_epochs = 30
history = model.fit(padded_latih, 
                    jenis_latih, 
                    epochs=num_epochs,
                    validation_data=(padded_uji, jenis_uji), 
                    verbose=2,
                    callbacks=[callbacks]
                    )

import matplotlib.pyplot as plt

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title('Akurasi Model')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.show()

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('Loss Model')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.show()